@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentScheduling.Models.ApplicationUsers> signInManager

    @if(signInManager.IsSignedIn(User))
{
    <form method="post" asp-action="Logoff" asp-controller="Account" class="form-inline d-flex align-items-center">
        <ul class="nav navbar-nav">
            <li class="nav-item text-white p-10">Hello,@User.Identity.Name! </li>
            <li class="nav-item ms-3"><button type="submit" class="nav-link text-white btn btn-link p-0" style="text-decoration: none;">Log Off</button></li>

        </ul>
    </form>
}
else
{
<ul class="nav navbar-nav">
    <li class="nav-item"><a class="nav-link text-white" id="registerLink" asp-action="Register" asp-controller="Account">Register</a></li>
    <li class="nav-item"><a class="nav-link text-white" id="loginLink" asp-action="Login" asp-controller="Account">Sign In</a></li>
</ul>
}

    @* @if(signInManager.IsSignedIn(User))
{
    //Add code for log off
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item"><a class="nav-link text-white" id="registerLink" asp-action="Register" asp-controller="Account">Register</a></li>
        <li class="nav-item"><a class="nav-link text-white"  id="loginLink" asp-action="Login" asp-controller="Account">Sign In</a></li>
    </ul>
}  <select asp-for="RoleName" asp-items="@AppointmentScheduling.Utility.Helper.GetRolesDropDown()" class="form-control"></select>
<select asp-for="RoleName" asp-items="@AppointmentScheduling.Utility.Helper.GetRolesDropDown()" class="form-control"></select>*@